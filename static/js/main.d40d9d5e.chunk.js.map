{"version":3,"sources":["modules/weatherIcon2.js","components/TodayCard.jsx","components/HomePage.jsx","components/ListPage.jsx","components/Calendar.jsx","components/MoonPage.jsx","modules/getData.js","modules/homeIcon.js","modules/useReducerSetup.js","components/App.jsx","index.js"],"names":["WeatherIcon2","className","state","STATE_MACHINE_NAME","params","src","process","stateMachines","artboard","autoplay","useRive","RiveComponent","rive","triggerInput","useStateMachineInput","stateInput","useEffect","setTimeout","value","weather","fire","TodayCard","today","temperature","HomePage","Fragment","upcoming","length","map","x","task","status","date","id","ListPage","data","months","daysIndex","Calendar","nextMonth","prevMonth","dateToDisplay","todayData","currentDay","getDate","currentMonthIndex","getMonth","currentYear","getFullYear","currentMonthData","Date","getDay","prevMonthData","onClick","allDaysToPrint","key","i","push","nb","current","diff","getSeven","index","slice","getLayout","MoonPage","getData","a","fetch","headers","json","Promise","resolve","console","log","HomeIcon","onClickEvent","onClickInput","onHoverInput","onMouseEnter","onMouseLeave","initialState","page","reducer","action","type","updatedPageState","updatedDataState","updatedUpcomingState","filteredItems","filter","item","includes","updatedWeatherState","newDateNext","updatedDateNextMonth","newDatePrev","updatedDatePrevMonth","Error","App","useReducer","dispatch","fetchIt","handleWeather","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d40d9d5e.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { useRive, useStateMachineInput } from 'rive-react';\r\n\r\nfunction WeatherIcon2({className, state}) {\r\n    const STATE_MACHINE_NAME = 'State Machine 1';\r\n    const STATE_NAME = 'state';\r\n    const SWITCH_NAME = 'switchAnimation';\r\n\r\n    const params = {\r\n        src: `${process.env.PUBLIC_URL}/weather2.riv`,\r\n        stateMachines: STATE_MACHINE_NAME,\r\n        artboard: 'New Artboard',\r\n        autoplay: true,\r\n    };\r\n    const { RiveComponent, rive } = useRive(params);\r\n    const triggerInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        SWITCH_NAME\r\n    );\r\n    const stateInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        STATE_NAME\r\n    );\r\n    useEffect(() => {\r\n        if (stateInput) {\r\n            setTimeout(() => {\r\n                stateInput.value = state.weather;\r\n                triggerInput.fire();\r\n            }, 250);\r\n        }\r\n    }, [stateInput,triggerInput,state.weather]);\r\n    return (\r\n        <RiveComponent\r\n            className={className}\r\n        />\r\n    );\r\n}\r\n\r\nexport default WeatherIcon2;","import React from \"react\";\r\n//import WeatherIcon from \"../modules/weatherIcon\";\r\nimport WeatherIcon2 from \"../modules/weatherIcon2\";\r\n\r\nfunction TodayCard({state}) {\r\n    const weather = ['Ensoleill√©', 'Nuageux', 'Pluvieux'];\r\n    return ( \r\n        <div className={\"todayCard card\"}>\r\n            <div className=\"todayCard__data\">\r\n                <p>{state.today}</p>\r\n                <p>{weather[state.weather]}</p>\r\n                <p>{state.temperature}</p>\r\n            </div>\r\n            <WeatherIcon2 className={'weatherIcon'} state={state} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodayCard;","import React from 'react';\r\nimport TodayCard from \"./TodayCard\";\r\n\r\nfunction HomePage({state}) {\r\n    return ( \r\n        <React.Fragment>\r\n            <h3>Home</h3>\r\n            <TodayCard state={state} />\r\n            <h3>T√¢ches √† venir :</h3>\r\n            <div className=\"upcomingContainer\">\r\n                {state.upcoming.length ?\r\n                    state.upcoming.map(x => {\r\n                        return (\r\n                            <div className=\"upcoming card\" key={x.id}>\r\n                                <div className=\"upcoming__data\">\r\n                                    <h4>{x.task}</h4>\r\n                                    <p>{x.status ? 'D√©j√† fait' : 'Encore √† faire'}</p>\r\n                                    <p>{x.date}</p>\r\n                                </div>\r\n                                <div className=\"upcoming__actions\">\r\n                                    <p>O</p>\r\n                                    <p>V</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }) :\r\n                    <div className=\"card\">\r\n                        <h4>Tout est en ordre !</h4>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nfunction ListPage({state}) {\r\n    return ( \r\n    <React.Fragment>\r\n        <h3>Mes t√¢ches</h3>\r\n        <div className=\"dataSetContainer\">\r\n            {\r\n                state.data.length > 0 ?\r\n                state.data.map(x=> {\r\n                    return (\r\n                        <div className=\"dataSet card\" key={x.id}>\r\n                            <p>{x.task}</p>\r\n                        </div>\r\n                    );\r\n                }):\r\n                <p>Loading Data...</p>\r\n            }\r\n        </div>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ListPage;","const months = ['Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'];\r\nconst daysIndex = [6, 0, 1, 2, 3, 4, 5];\r\n\r\nfunction Calendar({state, nextMonth, prevMonth}) {\r\n    const today = state.dateToDisplay;\r\n    const todayData = {\r\n        currentDay: today.getDate(),\r\n        currentMonthIndex: today.getMonth(),\r\n        currentYear: today.getFullYear()\r\n    }\r\n    const currentMonthData = {\r\n        firstDate: new Date(todayData.currentYear, todayData.currentMonthIndex, 1).getDay(),\r\n        lastDate: new Date(todayData.currentYear, todayData.currentMonthIndex +1, 0).getDate(),\r\n    }\r\n    const prevMonthData = {\r\n        lastDate: new Date(todayData.currentYear, todayData.currentMonthIndex, 0).getDate(),\r\n    }\r\n    \r\n    const getLayout = () => {\r\n        const allDaysToPrint = [];\r\n        let firstDayOfMonth = daysIndex[currentMonthData.firstDate];\r\n        let startOfPrevMonth = prevMonthData.lastDate - (firstDayOfMonth -1 );\r\n        let key = 1;\r\n        // Getting previous month dates to show\r\n        for (let i=startOfPrevMonth;i<=prevMonthData.lastDate;i++) {\r\n            allDaysToPrint.push({nb:i,current:false, key:key});\r\n            key++;\r\n        }\r\n        // Getting the current month dates\r\n        for (let i=1;i<=currentMonthData.lastDate;i++) {\r\n            allDaysToPrint.push({nb:i,current:true, key:key});\r\n            key++;\r\n        }\r\n        // Getting the rest of the dates to fill up the calendar\r\n        let diff = 42-allDaysToPrint.length;\r\n        for (let i=1;i<=diff;i++) {\r\n            allDaysToPrint.push({nb:i,current:false, key:key});\r\n            key++;\r\n        }\r\n        const getSeven = (index) => {\r\n            let data = allDaysToPrint.slice(index, index+7);\r\n            return data;\r\n        }\r\n        const results = [getSeven(0), getSeven(7), getSeven(14), getSeven(21), getSeven(28), getSeven(35)];\r\n        return results;\r\n    }\r\n    return ( \r\n        <div className=\"calendar\">\r\n            <div className=\"calendar__controls\">\r\n                <p onClick={()=> {prevMonth()}}>{\"<\"}</p>\r\n                <h4>{months[todayData.currentMonthIndex]} {todayData.currentYear}</h4>\r\n                <p onClick={()=>{nextMonth()}}>{\">\"}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n                <p className=\"dayName\">L</p>\r\n                <p className=\"dayName\">M</p>\r\n                <p className=\"dayName\">M</p>\r\n                <p className=\"dayName\">J</p>\r\n                <p className=\"dayName\">V</p>\r\n                <p className=\"dayName\">S</p>\r\n                <p className=\"dayName\">D</p>\r\n            </div>\r\n            {\r\n                getLayout().map(x=> {\r\n                    return (\r\n                        <div className=\"row\" key={`${x[0].key}-row`}>\r\n                            <p className={x[0].current ? \"currentMonth\": \"otherMonth\"} key={x[0].key}>{x[0].nb}</p>\r\n                            <p className={x[1].current ? \"currentMonth\": \"otherMonth\"} key={x[1].key}>{x[1].nb}</p>\r\n                            <p className={x[2].current ? \"currentMonth\": \"otherMonth\"} key={x[2].key}>{x[2].nb}</p>\r\n                            <p className={x[3].current ? \"currentMonth\": \"otherMonth\"} key={x[3].key}>{x[3].nb}</p>\r\n                            <p className={x[4].current ? \"currentMonth\": \"otherMonth\"} key={x[4].key}>{x[4].nb}</p>\r\n                            <p className={x[5].current ? \"currentMonth\": \"otherMonth\"} key={x[5].key}>{x[5].nb}</p>\r\n                            <p className={x[6].current ? \"currentMonth\": \"otherMonth\"} key={x[6].key}>{x[6].nb}</p>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nfunction MoonPage({state, nextMonth, prevMonth}) {\r\n    return ( \r\n        <React.Fragment>\r\n            <h3>Moon</h3>\r\n            <div className=\"card\">\r\n                <Calendar state={state} nextMonth={nextMonth} prevMonth={prevMonth} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MoonPage;","const getData = async () => {\r\n    try {\r\n        const data = await (await fetch(`${process.env.PUBLIC_URL}/database.json`, {\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })).json();\r\n        //return data;\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(data), 1000)\r\n            })\r\n    } catch (err) {\r\n        console.log(`The error is : ${err}`);\r\n    }\r\n}\r\n\r\nexport { getData };","import { useRive, useStateMachineInput } from 'rive-react';\r\n\r\nfunction HomeIcon({className, onClickEvent}) {\r\n    const STATE_MACHINE_NAME = 'State Machine 1';\r\n    const HOVER_NAME = 'Switch';\r\n    const CLICK_NAME = 'Trigger 2';\r\n\r\n    const params = {\r\n        src: `${process.env.PUBLIC_URL}/homeicon.riv`,\r\n        stateMachines: STATE_MACHINE_NAME,\r\n        artboard: 'New Artboard',\r\n        autoplay: true,\r\n    };\r\n    const { RiveComponent, rive } = useRive(params);\r\n    const onClickInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        CLICK_NAME\r\n    );\r\n    const onHoverInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        HOVER_NAME\r\n    );\r\n    return (\r\n        <RiveComponent\r\n            className={className}\r\n            onMouseEnter={()=>onHoverInput.value=true}\r\n            onMouseLeave={()=>onHoverInput.value=false}\r\n            onClick={()=>\r\n                {\r\n                    onClickInput.fire();\r\n                    onClickEvent();\r\n                }\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default HomeIcon;","const months = ['Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'];\r\nconst formatDate = (date) => {\r\n    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\nconst initialState = {\r\n    page: 'HOME_PAGE',\r\n    dateToDisplay: new Date(),\r\n    today: formatDate(new Date()),\r\n    weather: 1,\r\n    temperature: \"16¬∞ / 20¬∞\",\r\n    upcoming: [],\r\n    data: []\r\n};\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n    case 'handlePage':\r\n        let updatedPageState = {...state};\r\n        updatedPageState.page = action.page;\r\n        return {...updatedPageState};\r\n    case 'updateData':\r\n        let updatedDataState = {...state};\r\n        updatedDataState.data = action.data;\r\n        return {...updatedDataState};\r\n    case 'updateUpcoming':\r\n        let updatedUpcomingState = {...state};\r\n        let filteredItems = updatedUpcomingState.data.filter(item => item.date.includes('Juillet'));\r\n        updatedUpcomingState.upcoming = filteredItems;\r\n        return {...updatedUpcomingState}\r\n    case 'cycleWeather':\r\n        let updatedWeatherState = {...state};\r\n        if (updatedWeatherState.weather === 2) updatedWeatherState.weather = 0\r\n        else updatedWeatherState.weather += 1\r\n        return {...updatedWeatherState};\r\n    case 'nextMonth':\r\n        let updatedDateNextMonth = {...state};\r\n        let newDateNext;\r\n        if (updatedDateNextMonth.dateToDisplay.getMonth() === 11) {\r\n            newDateNext = new Date (updatedDateNextMonth.dateToDisplay.getFullYear() + 1, 0, 5);\r\n        } else {\r\n            newDateNext = new Date(updatedDateNextMonth.dateToDisplay.getFullYear(), updatedDateNextMonth.dateToDisplay.getMonth() + 1, 5);\r\n        }\r\n        updatedDateNextMonth.dateToDisplay = newDateNext;\r\n        return {...updatedDateNextMonth};\r\n    case 'prevMonth':\r\n        let updatedDatePrevMonth = {...state};\r\n        let newDatePrev;\r\n        if (updatedDatePrevMonth.dateToDisplay.getMonth() === 0) {\r\n            newDatePrev = new Date (updatedDatePrevMonth.dateToDisplay.getFullYear() - 1, 11, 5);\r\n        } else {\r\n            newDatePrev = new Date(updatedDatePrevMonth.dateToDisplay.getFullYear(), updatedDatePrevMonth.dateToDisplay.getMonth() - 1, 5);\r\n        }\r\n        updatedDatePrevMonth.dateToDisplay = newDatePrev;\r\n        return {...updatedDatePrevMonth};\r\n    default:\r\n        throw new Error();\r\n    }\r\n}\r\nexport {initialState, reducer};\r\n\r\n","import React, { useReducer, useEffect } from 'react';\r\n//Components\r\nimport HomePage from './HomePage.jsx';\r\nimport ListPage from './ListPage.jsx';\r\nimport MoonPage from './MoonPage.jsx';\r\n//Modules\r\nimport { getData } from \"../modules/getData\";\r\nimport HomeIcon from '../modules/homeIcon';\r\nimport { initialState, reducer } from '../modules/useReducerSetup.js';\r\n\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // Initial Loading Effects\r\n  useEffect(() => {\r\n    const fetchIt = async() => {\r\n      const data = await getData();\r\n      dispatch({type: 'updateData', data: data});\r\n    }\r\n    fetchIt();\r\n  }, []);\r\n\r\n  // Handler Functions\r\n  const handleWeather = () => {\r\n    dispatch({type: 'cycleWeather'});\r\n  }\r\n  const nextMonth = () => {\r\n    dispatch({type: 'nextMonth'});\r\n  }\r\n  const prevMonth = () => {\r\n    dispatch({type: 'prevMonth'});\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state.data.length === 0) return\r\n    dispatch({type: 'updateUpcoming'});\r\n  },[state.data])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n\r\n      </header>\r\n      <main className=\"main\">\r\n        {\r\n          state.page === \"LIST_PAGE\" &&\r\n          <ListPage state={state} />\r\n        }\r\n        {\r\n          state.page === \"HOME_PAGE\" &&\r\n          <HomePage state={state} handleWeather={handleWeather}/>\r\n        }\r\n        {\r\n          state.page === \"MOON_PAGE\" &&\r\n          <MoonPage state={state} nextMonth={nextMonth} prevMonth={prevMonth} />\r\n        }\r\n      </main>\r\n      <footer className=\"footer\">\r\n        {\r\n          state.page === \"LIST_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />\r\n        }\r\n        {\r\n          state.page === \"HOME_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />\r\n        }\r\n        {\r\n          state.page === \"MOON_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />\r\n        }\r\n        <div onClick={() => {\r\n          handleWeather();\r\n        }}>O</div>\r\n        \r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}