{"version":3,"sources":["modules/weatherIcon.js","components/TodayCard.jsx","components/HomePage.jsx","components/ListPage.jsx","components/MoonPage.jsx","modules/getData.js","modules/homeIcon.js","modules/useReducerSetup.js","components/App.jsx","modules/upcoming.js","index.js"],"names":["WeatherIcon","className","STATE_MACHINE_NAME","weather","params","src","stateMachines","artboard","autoplay","useRive","RiveComponent","rive","onClickInput","useStateMachineInput","onClick","currentIndex","value","TodayCard","state","today","temperature","HomePage","Fragment","upcoming","map","x","task","status","date","id","ListPage","data","length","MoonPage","getData","a","fetch","headers","json","Promise","resolve","setTimeout","HomeIcon","onClickEvent","onHoverInput","onMouseEnter","onMouseLeave","fire","months","initialState","page","Date","getDate","getMonth","getFullYear","reducer","action","type","updatedPageState","updatedDataState","updatedUpcomingState","Error","App","useReducer","dispatch","useEffect","fetchIt","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f620edc.chunk.js","sourcesContent":["import { useRive, useStateMachineInput } from 'rive-react';\r\n\r\nfunction WeatherIcon({className, weather}) {\r\n    const STATE_MACHINE_NAME = 'State Machine 1';\r\n    const INPUT_NAME = 'Number 1';\r\n\r\n    const params = {\r\n        src: 'weather.riv',\r\n        stateMachines: STATE_MACHINE_NAME,\r\n        artboard: 'New Artboard',\r\n        autoplay: true,\r\n    };\r\n    const { RiveComponent, rive } = useRive(params);\r\n    const onClickInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        INPUT_NAME\r\n    );\r\n    const cycle = (currentIndex) => {\r\n        if (currentIndex === 2) {\r\n            return 0;\r\n        } else {\r\n            return currentIndex + 1;\r\n        }\r\n    }\r\n    return (\r\n        <RiveComponent\r\n            className={className}\r\n            onClick={()=>\r\n                {\r\n                    onClickInput.value = cycle(onClickInput.value);\r\n                }\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default WeatherIcon;","import React from \"react\";\r\nimport WeatherIcon from \"../modules/weatherIcon\";\r\n\r\nfunction TodayCard({state}) {\r\n    return ( \r\n        <div className={\"todayCard card\"}>\r\n            <div className=\"todayCard__data\">\r\n                <p>{state.today}</p>\r\n                <p>{state.weather}</p>\r\n                <p>{state.temperature}</p>\r\n            </div>\r\n            <WeatherIcon className={'weatherIcon'} weather={'sunny'} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodayCard;","import React from 'react';\r\nimport TodayCard from \"./TodayCard\";\r\n\r\nfunction HomePage({state}) {\r\n    return ( \r\n        <React.Fragment>\r\n            <TodayCard state={state} />\r\n            <h3>Upcoming</h3>\r\n            {state.upcoming.map(x => {\r\n                return (\r\n                    <div className=\"upcoming card\" key={x.id}>\r\n                        <div className=\"upcoming__data\">\r\n                            <h4>{x.task}</h4>\r\n                            <p>{x.status ? 'Déjà fait' : 'Encore à faire'}</p>\r\n                            <p>{x.date}</p>\r\n                        </div>\r\n                        <div className=\"upcoming__actions\">\r\n                            <p>O</p>\r\n                            <p>V</p>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nfunction ListPage({state}) {\r\n    return ( \r\n    <React.Fragment>\r\n        <h3>Database</h3>\r\n        {\r\n            state.data.length > 0 ?\r\n            state.data.map(x=> {\r\n                return (\r\n                    <div className=\"dataSet card\" key={x.id}>\r\n                        <p>{x.task}</p>\r\n                    </div>\r\n                );\r\n            }):\r\n            <p>Loading Data...</p>\r\n        }\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ListPage;","function MoonPage({state}) {\r\n    return ( \r\n        <p>Moon page</p>\r\n    );\r\n}\r\n\r\nexport default MoonPage;","const getData = async () => {\r\n    const data = await (await fetch('database.json', {\r\n        headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    })).json();\r\n    //return data;\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => resolve(data), 5000)\r\n        })\r\n}\r\n\r\nexport { getData };","import { useRive, useStateMachineInput } from 'rive-react';\r\n\r\nfunction HomeIcon({className, onClickEvent}) {\r\n    const STATE_MACHINE_NAME = 'State Machine 1';\r\n    const HOVER_NAME = 'Switch';\r\n    const CLICK_NAME = 'Trigger 2';\r\n\r\n    const params = {\r\n        src: 'homeicon.riv',\r\n        stateMachines: STATE_MACHINE_NAME,\r\n        artboard: 'New Artboard',\r\n        autoplay: true,\r\n    };\r\n    const { RiveComponent, rive } = useRive(params);\r\n    const onClickInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        CLICK_NAME\r\n    );\r\n    const onHoverInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        HOVER_NAME\r\n    );\r\n    return (\r\n        <RiveComponent\r\n            className={className}\r\n            onMouseEnter={()=>onHoverInput.value=true}\r\n            onMouseLeave={()=>onHoverInput.value=false}\r\n            onClick={()=>\r\n                {\r\n                    onClickInput.fire();\r\n                    onClickEvent();\r\n                }\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default HomeIcon;","const months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\r\nconst formatDate = (date) => {\r\n    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\nconst initialState = {\r\n    page: 'HOME_PAGE',\r\n    today: formatDate(new Date()),\r\n    weather: \"Sunny\",\r\n    temperature: \"16° / 20°\",\r\n    upcoming: [],\r\n    data: []\r\n};\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n    case 'handlePage':\r\n        let updatedPageState = {...state};\r\n        updatedPageState.page = action.page;\r\n        return {...updatedPageState};\r\n    case 'updateData':\r\n        let updatedDataState = {...state};\r\n        updatedDataState.data = action.data;\r\n        return {...updatedDataState};\r\n    case 'updateUpcoming':\r\n        let updatedUpcomingState = {...state};\r\n        updatedUpcomingState.upcoming = action.data;\r\n        return {...updatedUpcomingState};\r\n    default:\r\n        throw new Error();\r\n    }\r\n}\r\nexport {initialState, reducer};\r\n\r\n","import React, { useReducer, useEffect } from 'react';\r\n//Components\r\nimport HomePage from './HomePage.jsx';\r\nimport ListPage from './ListPage.jsx';\r\nimport MoonPage from './MoonPage.jsx';\r\n//Modules\r\nimport { getUpcomingTasks } from '../modules/upcoming';\r\nimport { getData } from \"../modules/getData\";\r\nimport HomeIcon from '../modules/homeIcon';\r\nimport { initialState, reducer } from '../modules/useReducerSetup.js';\r\n\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  useEffect(() => {\r\n    const fetchIt = async() => {\r\n      const data = await getData();\r\n      dispatch({type: 'updateData', data: data});\r\n    }\r\n    fetchIt();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchIt = async() => {\r\n      const data = await getUpcomingTasks();\r\n      dispatch({type: 'updateUpcoming', data: data});\r\n    }\r\n    fetchIt();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n\r\n      </header>\r\n      <main className=\"main\">\r\n        {\r\n          state.page === \"LIST_PAGE\" &&\r\n          <ListPage state={state} />\r\n        }\r\n        {\r\n          state.page === \"HOME_PAGE\" &&\r\n          <HomePage state={state} />\r\n        }\r\n        {\r\n          state.page === \"MOON_PAGE\" &&\r\n          <MoonPage state={state} />\r\n        }\r\n      </main>\r\n      <footer className=\"footer\">\r\n        {\r\n          state.page === \"LIST_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />\r\n        }\r\n        {\r\n          state.page === \"HOME_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />\r\n        }\r\n        {\r\n          state.page === \"MOON_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />\r\n        }\r\n        <div onClick={() => console.log(state)}>O</div>\r\n        \r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const getUpcomingTasks = () => {\r\n    return (\r\n        [\r\n            {\r\n                id: 1,\r\n                task: 'Learn React',\r\n                date: 'Pour le 08 Octobre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Finish app',\r\n                date: 'Pour le 01 Décembre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 3,\r\n                task: 'Sleep & Repeat',\r\n                date: 'Pour le 16 Décembre 2021',\r\n                status: false\r\n            }\r\n        ]\r\n    );\r\n}\r\n\r\nexport { getUpcomingTasks };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}