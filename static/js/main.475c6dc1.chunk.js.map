{"version":3,"sources":["modules/weatherIcon2.js","components/TodayCard.jsx","components/HomePage.jsx","components/ListPage.jsx","components/MoonPage.jsx","modules/getData.js","modules/homeIcon.js","modules/useReducerSetup.js","components/App.jsx","modules/upcoming.js","index.js"],"names":["WeatherIcon2","className","state","STATE_MACHINE_NAME","params","src","process","stateMachines","artboard","autoplay","useRive","RiveComponent","rive","triggerInput","useStateMachineInput","stateInput","useEffect","setTimeout","value","weather","fire","TodayCard","today","temperature","HomePage","Fragment","upcoming","map","x","task","status","date","id","ListPage","data","length","MoonPage","getData","a","fetch","headers","json","Promise","resolve","console","log","HomeIcon","onClickEvent","onClickInput","onHoverInput","onMouseEnter","onMouseLeave","onClick","months","initialState","page","Date","getDate","getMonth","getFullYear","reducer","action","type","updatedPageState","updatedDataState","updatedUpcomingState","updatedWeatherState","Error","App","useReducer","dispatch","fetchIt","handleWeather","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.475c6dc1.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { useRive, useStateMachineInput } from 'rive-react';\r\n\r\nfunction WeatherIcon2({className, state}) {\r\n    const STATE_MACHINE_NAME = 'State Machine 1';\r\n    const STATE_NAME = 'state';\r\n    const SWITCH_NAME = 'switchAnimation';\r\n\r\n    const params = {\r\n        src: `${process.env.PUBLIC_URL}/weather2.riv`,\r\n        stateMachines: STATE_MACHINE_NAME,\r\n        artboard: 'New Artboard',\r\n        autoplay: true,\r\n    };\r\n    const { RiveComponent, rive } = useRive(params);\r\n    const triggerInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        SWITCH_NAME\r\n    );\r\n    const stateInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        STATE_NAME\r\n    );\r\n    useEffect(() => {\r\n        if (stateInput) {\r\n            setTimeout(() => {\r\n                stateInput.value = state.weather;\r\n                triggerInput.fire();\r\n            }, 250);\r\n        }\r\n    }, [stateInput,triggerInput,state.weather]);\r\n    return (\r\n        <RiveComponent\r\n            className={className}\r\n        />\r\n    );\r\n}\r\n\r\nexport default WeatherIcon2;","import React from \"react\";\r\n//import WeatherIcon from \"../modules/weatherIcon\";\r\nimport WeatherIcon2 from \"../modules/weatherIcon2\";\r\n\r\nfunction TodayCard({state}) {\r\n    const weather = ['Ensoleillé', 'Nuageux', 'Pluvieux'];\r\n    return ( \r\n        <div className={\"todayCard card\"}>\r\n            <div className=\"todayCard__data\">\r\n                <p>{state.today}</p>\r\n                <p>{weather[state.weather]}</p>\r\n                <p>{state.temperature}</p>\r\n            </div>\r\n            <WeatherIcon2 className={'weatherIcon'} state={state} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodayCard;","import React from 'react';\r\nimport TodayCard from \"./TodayCard\";\r\n\r\nfunction HomePage({state}) {\r\n    return ( \r\n        <React.Fragment>\r\n            <TodayCard state={state} />\r\n            <h3>Upcoming</h3>\r\n            {state.upcoming.map(x => {\r\n                return (\r\n                    <div className=\"upcoming card\" key={x.id}>\r\n                        <div className=\"upcoming__data\">\r\n                            <h4>{x.task}</h4>\r\n                            <p>{x.status ? 'Déjà fait' : 'Encore à faire'}</p>\r\n                            <p>{x.date}</p>\r\n                        </div>\r\n                        <div className=\"upcoming__actions\">\r\n                            <p>O</p>\r\n                            <p>V</p>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nfunction ListPage({state}) {\r\n    return ( \r\n    <React.Fragment>\r\n        <h3>Database</h3>\r\n        {\r\n            state.data.length > 0 ?\r\n            state.data.map(x=> {\r\n                return (\r\n                    <div className=\"dataSet card\" key={x.id}>\r\n                        <p>{x.task}</p>\r\n                    </div>\r\n                );\r\n            }):\r\n            <p>Loading Data...</p>\r\n        }\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ListPage;","function MoonPage({state}) {\r\n    return ( \r\n        <p>Moon page</p>\r\n    );\r\n}\r\n\r\nexport default MoonPage;","const getData = async () => {\r\n    try {\r\n        const data = await (await fetch(`${process.env.PUBLIC_URL}/database.json`, {\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })).json();\r\n        //return data;\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(data), 5000)\r\n            })\r\n    } catch (err) {\r\n        console.log(`The error is : ${err}`);\r\n    }\r\n}\r\n\r\nexport { getData };","import { useRive, useStateMachineInput } from 'rive-react';\r\n\r\nfunction HomeIcon({className, onClickEvent}) {\r\n    const STATE_MACHINE_NAME = 'State Machine 1';\r\n    const HOVER_NAME = 'Switch';\r\n    const CLICK_NAME = 'Trigger 2';\r\n\r\n    const params = {\r\n        src: `${process.env.PUBLIC_URL}/homeicon.riv`,\r\n        stateMachines: STATE_MACHINE_NAME,\r\n        artboard: 'New Artboard',\r\n        autoplay: true,\r\n    };\r\n    const { RiveComponent, rive } = useRive(params);\r\n    const onClickInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        CLICK_NAME\r\n    );\r\n    const onHoverInput = useStateMachineInput(\r\n        rive,\r\n        STATE_MACHINE_NAME,\r\n        HOVER_NAME\r\n    );\r\n    return (\r\n        <RiveComponent\r\n            className={className}\r\n            onMouseEnter={()=>onHoverInput.value=true}\r\n            onMouseLeave={()=>onHoverInput.value=false}\r\n            onClick={()=>\r\n                {\r\n                    onClickInput.fire();\r\n                    onClickEvent();\r\n                }\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default HomeIcon;","const months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\r\nconst formatDate = (date) => {\r\n    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\nconst initialState = {\r\n    page: 'HOME_PAGE',\r\n    today: formatDate(new Date()),\r\n    weather: 1,\r\n    temperature: \"16° / 20°\",\r\n    upcoming: [],\r\n    data: []\r\n};\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n    case 'handlePage':\r\n        let updatedPageState = {...state};\r\n        updatedPageState.page = action.page;\r\n        return {...updatedPageState};\r\n    case 'updateData':\r\n        let updatedDataState = {...state};\r\n        updatedDataState.data = action.data;\r\n        return {...updatedDataState};\r\n    case 'updateUpcoming':\r\n        let updatedUpcomingState = {...state};\r\n        updatedUpcomingState.upcoming = action.data;\r\n        return {...updatedUpcomingState};\r\n    case 'cycleWeather':\r\n        let updatedWeatherState = {...state};\r\n        if (updatedWeatherState.weather === 2) updatedWeatherState.weather = 0\r\n        else updatedWeatherState.weather += 1\r\n        return {...updatedWeatherState};\r\n    default:\r\n        throw new Error();\r\n    }\r\n}\r\nexport {initialState, reducer};\r\n\r\n","import React, { useReducer, useEffect } from 'react';\r\n//Components\r\nimport HomePage from './HomePage.jsx';\r\nimport ListPage from './ListPage.jsx';\r\nimport MoonPage from './MoonPage.jsx';\r\n//Modules\r\nimport { getUpcomingTasks } from '../modules/upcoming';\r\nimport { getData } from \"../modules/getData\";\r\nimport HomeIcon from '../modules/homeIcon';\r\nimport { initialState, reducer } from '../modules/useReducerSetup.js';\r\n\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  useEffect(() => {\r\n    const fetchIt = async() => {\r\n      const data = await getData();\r\n      dispatch({type: 'updateData', data: data});\r\n    }\r\n    fetchIt();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchIt = async() => {\r\n      const data = await getUpcomingTasks();\r\n      dispatch({type: 'updateUpcoming', data: data});\r\n    }\r\n    fetchIt();\r\n  }, []);\r\n  const handleWeather = () => {\r\n    dispatch({type: 'cycleWeather'})\r\n    console.log(state.weather);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n\r\n      </header>\r\n      <main className=\"main\">\r\n        {\r\n          state.page === \"LIST_PAGE\" &&\r\n          <ListPage state={state} />\r\n        }\r\n        {\r\n          state.page === \"HOME_PAGE\" &&\r\n          <HomePage state={state} handleWeather={handleWeather}/>\r\n        }\r\n        {\r\n          state.page === \"MOON_PAGE\" &&\r\n          <MoonPage state={state} />\r\n        }\r\n      </main>\r\n      <footer className=\"footer\">\r\n        {\r\n          state.page === \"LIST_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />\r\n        }\r\n        {\r\n          state.page === \"HOME_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />\r\n        }\r\n        {\r\n          state.page === \"MOON_PAGE\" ? \r\n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />:\r\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />\r\n        }\r\n        <div onClick={() => {\r\n          handleWeather();\r\n        }}>O</div>\r\n        \r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const getUpcomingTasks = () => {\r\n    return (\r\n        [\r\n            {\r\n                id: 1,\r\n                task: 'Learn React',\r\n                date: 'Pour le 08 Octobre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Finish app',\r\n                date: 'Pour le 01 Décembre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 3,\r\n                task: 'Sleep & Repeat',\r\n                date: 'Pour le 16 Décembre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 4,\r\n                task: 'Sleep & Repeat',\r\n                date: 'Pour le 16 Décembre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 5,\r\n                task: 'Sleep & Repeat',\r\n                date: 'Pour le 16 Décembre 2021',\r\n                status: false\r\n            },\r\n            {\r\n                id: 6,\r\n                task: 'Sleep & Repeat',\r\n                date: 'Pour le 16 Décembre 2021',\r\n                status: false\r\n            }\r\n        ]\r\n    );\r\n}\r\n\r\nexport { getUpcomingTasks };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}