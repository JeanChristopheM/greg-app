{"version":3,"sources":["modules/weatherIcon2.js","components/TodayCard.jsx","components/HomePage.jsx","components/ListPage.jsx","components/Calendar.jsx","components/MoonPage.jsx","modules/getData.js","modules/homeIcon.js","modules/useReducerSetup.js","components/App.jsx","modules/upcoming.js","index.js"],"names":["WeatherIcon2","className","state","STATE_MACHINE_NAME","params","src","process","stateMachines","artboard","autoplay","useRive","RiveComponent","rive","triggerInput","useStateMachineInput","stateInput","useEffect","setTimeout","value","weather","fire","TodayCard","today","temperature","HomePage","Fragment","upcoming","map","x","task","status","date","id","ListPage","data","length","months","daysIndex","Calendar","nextMonth","prevMonth","dateToDisplay","todayData","currentDay","getDate","currentMonthIndex","getMonth","currentYear","getFullYear","currentMonthData","firstDate","Date","lastDate","prevMonthData","onClick","allDaysToPrint","firstDayOfMonth","getDay","i","push","diff","getSeven","index","slice","getDaysToPrint","MoonPage","getData","a","fetch","headers","json","Promise","resolve","console","log","HomeIcon","onClickEvent","onClickInput","onHoverInput","onMouseEnter","onMouseLeave","initialState","page","reducer","action","type","updatedPageState","updatedDataState","updatedUpcomingState","updatedWeatherState","newDateNext","updatedDateNextMonth","newDatePrev","updatedDatePrevMonth","Error","App","useReducer","dispatch","fetchIt","handleWeather","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.927ecf7c.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useRive, useStateMachineInput } from 'rive-react';\n\nfunction WeatherIcon2({className, state}) {\n    const STATE_MACHINE_NAME = 'State Machine 1';\n    const STATE_NAME = 'state';\n    const SWITCH_NAME = 'switchAnimation';\n\n    const params = {\n        src: `${process.env.PUBLIC_URL}/weather2.riv`,\n        stateMachines: STATE_MACHINE_NAME,\n        artboard: 'New Artboard',\n        autoplay: true,\n    };\n    const { RiveComponent, rive } = useRive(params);\n    const triggerInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        SWITCH_NAME\n    );\n    const stateInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        STATE_NAME\n    );\n    useEffect(() => {\n        if (stateInput) {\n            setTimeout(() => {\n                stateInput.value = state.weather;\n                triggerInput.fire();\n            }, 250);\n        }\n    }, [stateInput,triggerInput,state.weather]);\n    return (\n        <RiveComponent\n            className={className}\n        />\n    );\n}\n\nexport default WeatherIcon2;","import React from \"react\";\n//import WeatherIcon from \"../modules/weatherIcon\";\nimport WeatherIcon2 from \"../modules/weatherIcon2\";\n\nfunction TodayCard({state}) {\n    const weather = ['Ensoleill√©', 'Nuageux', 'Pluvieux'];\n    return ( \n        <div className={\"todayCard card\"}>\n            <div className=\"todayCard__data\">\n                <p>{state.today}</p>\n                <p>{weather[state.weather]}</p>\n                <p>{state.temperature}</p>\n            </div>\n            <WeatherIcon2 className={'weatherIcon'} state={state} />\n        </div>\n    );\n}\n\nexport default TodayCard;","import React from 'react';\nimport TodayCard from \"./TodayCard\";\n\nfunction HomePage({state}) {\n    return ( \n        <React.Fragment>\n            <TodayCard state={state} />\n            <h3>Upcoming</h3>\n            <div className=\"upcomingContainer\">\n                {state.upcoming.map(x => {\n                    return (\n                        <div className=\"upcoming card\" key={x.id}>\n                            <div className=\"upcoming__data\">\n                                <h4>{x.task}</h4>\n                                <p>{x.status ? 'D√©j√† fait' : 'Encore √† faire'}</p>\n                                <p>{x.date}</p>\n                            </div>\n                            <div className=\"upcoming__actions\">\n                                <p>O</p>\n                                <p>V</p>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default HomePage;","import React from \"react\";\n\nfunction ListPage({state}) {\n    return ( \n    <React.Fragment>\n        <h3>Database</h3>\n        <div className=\"dataSetContainer\">\n            {\n                state.data.length > 0 ?\n                state.data.map(x=> {\n                    return (\n                        <div className=\"dataSet card\" key={x.id}>\n                            <p>{x.task}</p>\n                        </div>\n                    );\n                }):\n                <p>Loading Data...</p>\n            }\n        </div>\n    </React.Fragment>\n    );\n}\n\nexport default ListPage;","const days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\nconst months = ['Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'];\nconst daysIndex = [6, 0, 1, 2, 3, 4, 5];\nfunction Calendar({state, nextMonth, prevMonth}) {\n    const today = state.dateToDisplay;\n    const todayData = {\n        currentDay: today.getDate(),\n        currentMonthIndex: today.getMonth(),\n        currentYear: today.getFullYear()\n    }\n    const currentMonthData = {\n        firstDate: new Date(todayData.currentYear, todayData.currentMonthIndex, 1),\n        lastDate: new Date(todayData.currentYear, todayData.currentMonthIndex +1, 0),\n    }\n    const prevMonthData = {\n        lastDate: new Date(todayData.currentYear, todayData.currentMonthIndex, 0),\n    }\n    \n    const getDaysToPrint = () => {\n        const allDaysToPrint = [];\n        let firstDayOfMonth = daysIndex[currentMonthData.firstDate.getDay()];\n        let startOfPrevMonth = prevMonthData.lastDate.getDate() - (firstDayOfMonth -1 );\n        for (let i=startOfPrevMonth;i<=prevMonthData.lastDate.getDate();i++) {\n            allDaysToPrint.push(i);\n        }\n        for (let i=1;i<=currentMonthData.lastDate.getDate();i++) {\n            allDaysToPrint.push(i);\n        }\n        let diff = 42-allDaysToPrint.length;\n        for (let i=1;i<=diff;i++) {\n            allDaysToPrint.push(i);\n        }\n        const getSeven = (index) => {\n            let data = allDaysToPrint.slice(index, index+7);\n            return data;\n        }\n        const results = [getSeven(0), getSeven(7), getSeven(14), getSeven(21), getSeven(28), getSeven(35)];\n        return results;\n    }\n    return ( \n        <div className=\"calendar\">\n            <div className=\"calendar__controls\">\n                <p onClick={()=> {prevMonth()}}>p</p>\n                <h4>{months[todayData.currentMonthIndex]} {todayData.currentYear}</h4>\n                <p onClick={()=>{nextMonth()}}>n</p>\n            </div>\n            <div className=\"row\">\n                <p className=\"dayName\">L</p>\n                <p className=\"dayName\">M</p>\n                <p className=\"dayName\">M</p>\n                <p className=\"dayName\">J</p>\n                <p className=\"dayName\">V</p>\n                <p className=\"dayName\">S</p>\n                <p className=\"dayName\">D</p>\n            </div>\n            {\n                getDaysToPrint().map(x=> {\n                    return (\n                        <div className=\"row\">\n                            <p>{x[0]}</p>\n                            <p>{x[1]}</p>\n                            <p>{x[2]}</p>\n                            <p>{x[3]}</p>\n                            <p>{x[4]}</p>\n                            <p>{x[5]}</p>\n                            <p>{x[6]}</p>\n                        </div>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default Calendar;","import React from \"react\";\nimport Calendar from \"./Calendar\";\n\nfunction MoonPage({state, nextMonth, prevMonth}) {\n    return ( \n        <React.Fragment>\n            <p>Moon page</p>\n            <Calendar state={state} nextMonth={nextMonth} prevMonth={prevMonth} />\n        </React.Fragment>\n    );\n}\n\nexport default MoonPage;","const getData = async () => {\n    try {\n        const data = await (await fetch(`${process.env.PUBLIC_URL}/database.json`, {\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })).json();\n        //return data;\n        return new Promise((resolve) => {\n            setTimeout(() => resolve(data), 5000)\n            })\n    } catch (err) {\n        console.log(`The error is : ${err}`);\n    }\n}\n\nexport { getData };","import { useRive, useStateMachineInput } from 'rive-react';\n\nfunction HomeIcon({className, onClickEvent}) {\n    const STATE_MACHINE_NAME = 'State Machine 1';\n    const HOVER_NAME = 'Switch';\n    const CLICK_NAME = 'Trigger 2';\n\n    const params = {\n        src: `${process.env.PUBLIC_URL}/homeicon.riv`,\n        stateMachines: STATE_MACHINE_NAME,\n        artboard: 'New Artboard',\n        autoplay: true,\n    };\n    const { RiveComponent, rive } = useRive(params);\n    const onClickInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        CLICK_NAME\n    );\n    const onHoverInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        HOVER_NAME\n    );\n    return (\n        <RiveComponent\n            className={className}\n            onMouseEnter={()=>onHoverInput.value=true}\n            onMouseLeave={()=>onHoverInput.value=false}\n            onClick={()=>\n                {\n                    onClickInput.fire();\n                    onClickEvent();\n                }\n            }\n        />\n    );\n}\n\nexport default HomeIcon;","const months = ['Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'];\nconst formatDate = (date) => {\n    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\n};\nconst initialState = {\n    page: 'HOME_PAGE',\n    dateToDisplay: new Date(),\n    today: formatDate(new Date()),\n    weather: 1,\n    temperature: \"16¬∞ / 20¬∞\",\n    upcoming: [],\n    data: []\n};\nfunction reducer(state, action) {\n    switch (action.type) {\n    case 'handlePage':\n        let updatedPageState = {...state};\n        updatedPageState.page = action.page;\n        return {...updatedPageState};\n    case 'updateData':\n        let updatedDataState = {...state};\n        updatedDataState.data = action.data;\n        return {...updatedDataState};\n    case 'updateUpcoming':\n        let updatedUpcomingState = {...state};\n        updatedUpcomingState.upcoming = action.data;\n        return {...updatedUpcomingState};\n    case 'cycleWeather':\n        let updatedWeatherState = {...state};\n        if (updatedWeatherState.weather === 2) updatedWeatherState.weather = 0\n        else updatedWeatherState.weather += 1\n        return {...updatedWeatherState};\n    case 'nextMonth':\n        let updatedDateNextMonth = {...state};\n        let newDateNext;\n        if (updatedDateNextMonth.dateToDisplay.getMonth() === 11) {\n            newDateNext = new Date (updatedDateNextMonth.dateToDisplay.getFullYear() + 1, 0, 5);\n        } else {\n            newDateNext = new Date(updatedDateNextMonth.dateToDisplay.getFullYear(), updatedDateNextMonth.dateToDisplay.getMonth() + 1, 5);\n        }\n        updatedDateNextMonth.dateToDisplay = newDateNext;\n        return {...updatedDateNextMonth};\n    case 'prevMonth':\n        let updatedDatePrevMonth = {...state};\n        let newDatePrev;\n        if (updatedDatePrevMonth.dateToDisplay.getMonth() === 0) {\n            newDatePrev = new Date (updatedDatePrevMonth.dateToDisplay.getFullYear() - 1, 11, 5);\n        } else {\n            newDatePrev = new Date(updatedDatePrevMonth.dateToDisplay.getFullYear(), updatedDatePrevMonth.dateToDisplay.getMonth() - 1, 5);\n        }\n        updatedDatePrevMonth.dateToDisplay = newDatePrev;\n        return {...updatedDatePrevMonth};\n    default:\n        throw new Error();\n    }\n}\nexport {initialState, reducer};\n\n","import React, { useReducer, useEffect } from 'react';\n//Components\nimport HomePage from './HomePage.jsx';\nimport ListPage from './ListPage.jsx';\nimport MoonPage from './MoonPage.jsx';\n//Modules\nimport { getUpcomingTasks } from '../modules/upcoming';\nimport { getData } from \"../modules/getData\";\nimport HomeIcon from '../modules/homeIcon';\nimport { initialState, reducer } from '../modules/useReducerSetup.js';\n\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const fetchIt = async() => {\n      const data = await getData();\n      dispatch({type: 'updateData', data: data});\n    }\n    fetchIt();\n  }, []);\n  useEffect(() => {\n    const fetchIt = async() => {\n      const data = await getUpcomingTasks();\n      dispatch({type: 'updateUpcoming', data: data});\n    }\n    fetchIt();\n  }, []);\n  const handleWeather = () => {\n    dispatch({type: 'cycleWeather'});\n  }\n  const nextMonth = () => {\n    dispatch({type: 'nextMonth'});\n  }\n  const prevMonth = () => {\n    dispatch({type: 'prevMonth'});\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n\n      </header>\n      <main className=\"main\">\n        {\n          state.page === \"LIST_PAGE\" &&\n          <ListPage state={state} />\n        }\n        {\n          state.page === \"HOME_PAGE\" &&\n          <HomePage state={state} handleWeather={handleWeather}/>\n        }\n        {\n          state.page === \"MOON_PAGE\" &&\n          <MoonPage state={state} nextMonth={nextMonth} prevMonth={prevMonth} />\n        }\n      </main>\n      <footer className=\"footer\">\n        {\n          state.page === \"LIST_PAGE\" ? \n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />:\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'LIST_PAGE'})} />\n        }\n        {\n          state.page === \"HOME_PAGE\" ? \n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />:\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'HOME_PAGE'})} />\n        }\n        {\n          state.page === \"MOON_PAGE\" ? \n          <HomeIcon className={'homeicon active'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />:\n          <HomeIcon className={'homeicon'} onClickEvent={() => dispatch({type: 'handlePage', page: 'MOON_PAGE'})} />\n        }\n        <div onClick={() => {\n          handleWeather();\n        }}>O</div>\n        \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const getUpcomingTasks = () => {\n    return (\n        [\n            {\n                id: 1,\n                task: 'Learn React',\n                date: 'Pour le 08 Octobre 2021',\n                status: false\n            },\n            {\n                id: 2,\n                task: 'Finish app',\n                date: 'Pour le 01 D√©cembre 2021',\n                status: false\n            },\n            {\n                id: 3,\n                task: 'Sleep & Repeat',\n                date: 'Pour le 16 D√©cembre 2021',\n                status: false\n            },\n            {\n                id: 4,\n                task: 'Sleep & Repeat',\n                date: 'Pour le 16 D√©cembre 2021',\n                status: false\n            },\n            {\n                id: 5,\n                task: 'Sleep & Repeat',\n                date: 'Pour le 16 D√©cembre 2021',\n                status: false\n            },\n            {\n                id: 6,\n                task: 'Sleep & Repeat',\n                date: 'Pour le 16 D√©cembre 2021',\n                status: false\n            }\n        ]\n    );\n}\n\nexport { getUpcomingTasks };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}